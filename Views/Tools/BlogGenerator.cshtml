@{
    ViewData["Title"] = "Blog Content Generator";
}

<div class="container mx-auto px-4 py-8">
    <div class="max-w-3xl mx-auto">
        <h1 class="text-3xl font-bold mb-6">Blog Content Generator</h1>
        <p class="text-gray-600 mb-8">Generate SEO-optimized blog posts and articles in minutes.</p>

        <form id="blogGeneratorForm" class="space-y-6">
            <div>
                <label for="topic" class="block text-sm font-medium text-gray-700">Blog Topic</label>
                <input type="text" id="topic" name="topic" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" placeholder="Enter your blog topic" required>
            </div>

            <div>
                <label for="keywords" class="block text-sm font-medium text-gray-700">SEO Keywords</label>
                <input type="text" id="keywords" name="keywords" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" placeholder="Enter keywords separated by commas">
            </div>

            <div>
                <label for="format" class="block text-sm font-medium text-gray-700">Content Format</label>
                <select id="format" name="format" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    <option value="article">Article</option>
                    <option value="howto">How-to Guide</option>
                    <option value="listicle">Listicle</option>
                    <option value="review">Review</option>
                </select>
            </div>

            <div>
                <label for="tone" class="block text-sm font-medium text-gray-700">Writing Tone</label>
                <select id="tone" name="tone" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    <option value="professional">Professional</option>
                    <option value="casual">Casual</option>
                    <option value="formal">Formal</option>
                    <option value="conversational">Conversational</option>
                </select>
            </div>

            <div>
                <label for="length" class="block text-sm font-medium text-gray-700">Content Length</label>
                <select id="length" name="length" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                    <option value="short">Short (500 words)</option>
                    <option value="medium">Medium (1000 words)</option>
                    <option value="long">Long (1500+ words)</option>
                </select>
            </div>

            <button type="submit" class="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2">
                Generate Content
            </button>
        </form>

        <div id="generatedContent" class="mt-8 hidden">
            <h2 class="text-xl font-semibold mb-4">Generated Content</h2>
            <div id="contentOutput" class="prose max-w-none bg-white p-6 rounded-lg shadow">
                <!-- Generated content will be inserted here -->
            </div>
            <div class="mt-4 flex justify-end">
                <button id="copyContent" class="text-blue-600 hover:text-blue-800 font-medium">
                    Copy to Clipboard
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('blogGeneratorForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const form = e.target;
            const formData = new FormData(form);
            const prompt = `Generate a ${formData.get('length')} ${formData.get('format')} blog post about ${formData.get('topic')} in a ${formData.get('tone')} tone. Include these SEO keywords: ${formData.get('keywords')}. Focus on creating engaging, well-structured content with proper headings, paragraphs, and SEO optimization.`;

            try {
                const submitButton = form.querySelector('button[type="submit"]');
                submitButton.disabled = true;
                submitButton.innerHTML = '<span class="animate-pulse">Generating...</span>';

                const response = await fetch('/api/tools/generate-blog-content', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ prompt })
                });

                if (response.status === 429) {
                    throw new Error('Too many requests. Please wait a moment and try again.');
                }

                if (!response.ok) {
                    throw new Error('Failed to generate content. Please try again.');
                }

                const data = await response.json();
                if (data.error) {
                    throw new Error(data.error);
                }

                document.getElementById('contentOutput').innerHTML = data.content;
                document.getElementById('generatedContent').classList.remove('hidden');
            } catch (error) {
                console.error('Error:', error);
                const errorMessage = error.message.includes('Too many requests') ?
                    error.message :
                    'Failed to generate content. Please try again.';
                alert(errorMessage);
            } finally {
                const submitButton = form.querySelector('button[type="submit"]');
                submitButton.disabled = false;
                submitButton.innerHTML = 'Generate Content';
            }
        });

        document.getElementById('copyContent').addEventListener('click', () => {
            const content = document.getElementById('contentOutput').innerText;
            navigator.clipboard.writeText(content)
                .then(() => alert('Content copied to clipboard!'))
                .catch(err => console.error('Failed to copy:', err));
        });
    </script>
}