@{
    ViewData["Title"] = "AI Story Generator";
}

<main class="min-h-screen bg-gradient-to-b from-[#e0e7ff] to-white py-12">
    <div class="max-w-4xl mx-auto px-4">
        <div class="text-center mb-10">
            <h1 class="text-4xl font-bold text-[#312e81] mb-4">AI Story Generator</h1>
            <p class="text-lg text-gray-600">Generate stories on your desired topics with our free AI story generator. Simply enter the prompt and adjust parameters as per your requirements to fetch engaging stories effortlessly!</p>
        </div>

        <div class="bg-white rounded-xl shadow-lg p-8">
            <div class="grid md:grid-cols-2 gap-8">
                <div class="space-y-6">
                    <div>
                        <label for="story-prompt" class="block text-sm font-medium text-gray-700 mb-2">Write about...</label>
                        <textarea id="story-prompt" rows="4" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" placeholder="Enter your story prompt here..."></textarea>
                    </div>

                    <div class="space-y-4">
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Story Type</label>
                            <select id="story-type" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                                <option value="default">Default</option>
                                <option value="fiction">Fiction</option>
                                <option value="non-fiction">Non-Fiction</option>
                                <option value="fantasy">Fantasy</option>
                                <option value="mystery">Mystery</option>
                            </select>
                        </div>

                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Set Creativity</label>
                            <select id="creativity-level" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500">
                                <option value="standard">Standard</option>
                                <option value="high">High</option>
                                <option value="maximum">Maximum</option>
                            </select>
                        </div>

                        <div class="space-y-2">
                            <div class="flex justify-between items-center">
                                <label class="block text-sm font-medium text-gray-700">Story Length</label>
                                <span id="length-value" class="text-sm text-indigo-600 font-medium">500 words</span>
                            </div>
                            <input type="range" id="length-slider" min="100" max="2000" value="500" step="100"
                                class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-indigo-600">
                            <div class="flex justify-between text-xs text-gray-500">
                                <span>Short</span>
                                <span>Medium</span>
                                <span>Long</span>
                            </div>
                        </div>
                        <div class="space-y-2">
                            <div class="flex justify-between items-center">
                                <label class="block text-sm font-medium text-gray-700">Story Weight</label>
                                <span id="weight-value" class="text-sm text-indigo-600 font-medium">Normal</span>
                            </div>
                            <input type="range" id="weight-slider" min="1" max="5" value="3" step="1"
                                class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer accent-indigo-600">
                            <div class="flex justify-between text-xs text-gray-500">
                                <span>Light</span>
                                <span>Normal</span>
                                <span>Heavy</span>
                            </div>
                        </div>
                    </div>

                    <button id="generate-btn" class="w-full bg-indigo-600 text-white px-6 py-3 rounded-lg font-semibold hover:bg-indigo-700 transition-colors">
                        Generate Story
                    </button>
                </div>
                <div class="p-6 bg-gray-50 rounded-lg">
                    <h2 class="text-xl font-semibold mb-4">Generated Story</h2>
                    <div id="story-output" class="whitespace-pre-line text-gray-700 mb-4"></div>
                    <div class="flex space-x-4">
                        <button id="copy-btn" class="flex-1 bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors">Copy</button>
                        <button id="share-btn" class="flex-1 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg font-semibold transition-colors">Share</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>

<script>
    // Update length value display
    const lengthSlider = document.getElementById('length-slider');
    const lengthValue = document.getElementById('length-value');
    lengthSlider.addEventListener('input', function() {
        lengthValue.textContent = `${this.value} words`;
    });

    // Update weight value display
    const weightSlider = document.getElementById('weight-slider');
    const weightValue = document.getElementById('weight-value');
    const weightLabels = ['Very Light', 'Light', 'Normal', 'Heavy', 'Very Heavy'];
    weightSlider.addEventListener('input', function() {
        weightValue.textContent = weightLabels[this.value - 1];
    });

    document.getElementById('generate-btn').addEventListener('click', async function() {
        const prompt = document.getElementById('story-prompt').value.trim();
        if (!prompt) {
            alert('Please enter a story prompt.');
            return;
        }

        const storyType = document.getElementById('story-type').value;
        const creativity = document.getElementById('creativity-level').value;
        const length = document.getElementById('length-slider').value;
        const weight = weightLabels[document.getElementById('weight-slider').value - 1];

        let fullPrompt = `Write a ${weight} story of approximately ${length} words in ${storyType} style with ${creativity} creativity about: ${prompt}`;

        const response = await fetch('/api/tools/generate-story', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ prompt: fullPrompt })
        });

        const data = await response.json();
        const output = document.getElementById('story-output');
        if(data.story){
            output.textContent = data.story;
        } else if(data.error){
            output.textContent = 'Error: ' + data.error;
        } else {
            output.textContent = 'No story generated.';
        }
    });

    document.getElementById('copy-btn').addEventListener('click', async function() {
        const storyText = document.getElementById('story-output').textContent;
        if(!storyText){
            alert('No story to copy!');
            return;
        }
        try {
            await navigator.clipboard.writeText(storyText);
            alert('Story copied to clipboard!');
        } catch (err) {
            alert('Failed to copy story');
        }
    });

    document.getElementById('share-btn').addEventListener('click', async function() {
        const storyText = document.getElementById('story-output').textContent;
        if (!storyText) {
            alert('No story to share!');
            return;
        }
        if (navigator.share) {
            try {
                await navigator.share({
                    title: 'Check out this AI-generated story',
                    text: storyText
                });
            } catch (error) {
                console.log('Error sharing', error);
            }
        } else {
            alert('Web Share API not supported on this device/browser.');
        }
    });
</script>

<div class="relative">
    <img src="/images/story-generator-illustration.svg" alt="Story Generator" class="w-full h-auto">
    <p class="text-sm text-gray-500 text-center mt-4">Keep in mind the more detail you provide,<br>the better output you get.</p>
</div>
</div>