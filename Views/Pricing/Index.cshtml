@{
    ViewData["Title"] = "Pricing Plans";
    var plans = ViewData["Plans"] as dynamic[];
    var testimonials = ViewData["Testimonials"] as dynamic[];
}

<div class="min-h-screen bg-gradient-to-br from-blue-100 to-purple-200 py-20">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
            <h1 class="text-4xl font-bold text-gray-900 sm:text-5xl">Choose Your Perfect Plan</h1>
            <p class="mt-5 text-xl text-gray-500">Start creating amazing content with our AI-powered tools</p>
        </div>

        <div class="mt-16 grid grid-cols-1 gap-8 lg:grid-cols-3">
            @if (plans != null)
            {
                for (int i = 0; i < plans.Length; i++)
                {
                    var plan = plans[i];
                    <div class="relative bg-white rounded-2xl shadow-xl overflow-hidden transition-transform hover:scale-105 @(plan.Popular ? "transform scale-105 border-4 border-yellow-400" : "")">
                        @if (plan.Popular)
                        {
                            <div class="absolute top-0 right-0 bg-yellow-400 text-xs font-bold px-3 py-1 rounded-bl-lg">
                                POPULAR
                            </div>
                        }
                        <div class="p-8">
                            <h3 class="text-2xl font-semibold text-gray-900">@plan.Name</h3>
                            <p class="mt-4 text-gray-500">@plan.Description</p>
                            <p class="mt-8">
                                <span class="text-5xl font-bold text-gray-900">â‚¹@plan.Price</span>
                                <span class="text-gray-500">/month</span>
                            </p>
                            <ul class="mt-8 space-y-4">
                                @foreach (var feature in plan.Features)
                                {
                                    <li class="flex items-center">
                                        <svg class="w-5 h-5 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                        </svg>
                                        <span class="ml-3 text-gray-700">@feature</span>
                                    </li>
                                }
                            </ul>
                            <button onclick="handlePlanAction('@plan.Name.ToString().ToLower()')"
                                    class="mt-8 w-full py-3 px-4 rounded-lg @(plan.Name == "Free" ? "bg-green-500 hover:bg-green-700" : plan.Name == "Pro" ? "bg-blue-500 hover:bg-blue-700" : "bg-indigo-600 hover:bg-indigo-700") text-white focus:outline-none focus:ring-2 focus:ring-offset-2">
                                @(plan.Name == "Enterprise" ? "Contact Sales" : plan.Name == "Free" ? "Get Started" : "Subscribe Now")
                            </button>
                        </div>
                    </div>
                }
            }
        </div>

        <div class="mt-20">
            <h2 class="text-2xl font-bold text-center text-gray-800 mb-8">What Our Users Say</h2>
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                @if (testimonials != null)
                {
                    foreach (var t in testimonials)
                    {
                        <div class="bg-white rounded-xl shadow-md p-6 flex flex-col items-center">
                            <svg class="w-8 h-8 text-indigo-400 mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21H5a2 2 0 01-2-2V7a2 2 0 012-2h4l2-2h4a2 2 0 012 2v12a2 2 0 01-2 2z" />
                            </svg>
                            <p class="text-gray-700 italic">"@t.Text"</p>
                            <span class="mt-4 font-semibold text-gray-900">@t.Name</span>
                        </div>
                    }
                }
            </div>
        </div>

        <!-- Payment Modal -->
        <div id="paymentModal" class="fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center z-50 hidden">
            <div class="bg-white rounded-2xl shadow-2xl p-8 w-full max-w-sm relative animate-fadeIn">
                <button onclick="closePaymentModal()" class="absolute top-3 right-3 text-gray-400 hover:text-gray-700 text-2xl">&times;</button>
                <div class="flex justify-center mb-6">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/0/04/Visa.svg" alt="Visa" class="h-8 mx-1">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/MasterCard_Logo.svg" alt="MasterCard" class="h-8 mx-1">
                    <img src="https://upload.wikimedia.org/wikipedia/commons/5/5e/PayPal_2014_logo.png" alt="PayPal" class="h-8 mx-1">
                </div>
                <h3 class="text-xl font-bold text-gray-900 mb-2 text-center">Card Payment</h3>
                <form id="fakePaymentForm" autocomplete="off" novalidate>
                    <div class="mb-4">
                        <label class="block text-gray-700 mb-1">Card Number</label>
                        <input type="text" maxlength="19" pattern="[0-9 ]*" inputmode="numeric" placeholder="1234 5678 9012 3456" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:border-blue-400 transition outline-none bg-gray-50" required>
                        <span class="hidden text-xs text-red-500 mt-1">Enter valid card number</span>
                    </div>
                    <div class="flex space-x-3 mb-4">
                        <div class="w-1/2">
                            <label class="block text-gray-700 mb-1">Expiry</label>
                            <input type="text" maxlength="5" pattern="\d{2}/\d{2}" placeholder="MM/YY" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:border-blue-400 transition outline-none bg-gray-50" required>
                            <span class="hidden text-xs text-red-500 mt-1">MM/YY</span>
                        </div>
                        <div class="w-1/2">
                            <label class="block text-gray-700 mb-1">CVC</label>
                            <input type="text" maxlength="4" pattern="\d{3,4}" placeholder="123" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-400 focus:border-blue-400 transition outline-none bg-gray-50" required>
                            <span class="hidden text-xs text-red-500 mt-1">Required</span>
                        </div>
                    </div>
                    <button type="submit" class="w-full py-3 mt-2 rounded-lg bg-gradient-to-r from-blue-500 to-indigo-600 text-white font-semibold text-lg shadow-md hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 animate-bounce">Pay Now</button>
                    <div id="fakePaymentMsg" class="hidden mt-4 text-green-600 text-center font-semibold">Payment processing...</div>
                </form>
            </div>
        </div>
    </div>
</div>

<div id="contactModal" class="fixed inset-0 bg-gray-500 bg-opacity-75 hidden z-50">
    <div class="flex items-center justify-center min-h-screen">
        <div class="bg-white rounded-lg p-8 max-w-2xl w-full shadow-lg relative">
            <button onclick="closeContactModal()" class="absolute top-2 right-2 text-gray-500 hover:text-gray-700">&times;</button>
            <partial name="~/Views/Home/Contact.cshtml" />
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function closePaymentModal() {
            document.getElementById('paymentModal').classList.add('hidden');
        }
        document.addEventListener('DOMContentLoaded', function() {
            var form = document.getElementById('fakePaymentForm');
            if(form){
                form.onsubmit = function(e){
                    e.preventDefault();
                    var valid = true;
                    var inputs = form.querySelectorAll('input');
                    inputs.forEach(function(input){
                        var span = input.nextElementSibling;
                        if(!input.checkValidity()){
                            span.classList.remove('hidden');
                            valid = false;
                        } else {
                            span.classList.add('hidden');
                        }
                    });
                    if(valid){
                        document.getElementById('fakePaymentMsg').classList.remove('hidden');
                        setTimeout(function(){
                            window.location.href = '/Pricing/Success';
                        }, 1800);
                    }
                };
            }
        });

        function handlePlanAction(plan) {
            if (plan === 'free') {
                window.location.href = '/Dashboard';
            } else if (plan === 'enterprise') {
                document.getElementById('contactModal').classList.remove('hidden');
            } else {
                document.getElementById('selected-plan').value = plan;
                document.getElementById('paymentModal').classList.remove('hidden');
            }
        }
        function closePaymentModal() {
            document.getElementById('paymentModal').classList.add('hidden');
        }
        function closeContactModal() {
            document.getElementById('contactModal').classList.add('hidden');
        }
    </script>
}
